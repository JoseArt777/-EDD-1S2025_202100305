program test_estructuras;
{$mode objfpc}{$H+}
uses
  SysUtils, DateUtils,
  edd_types in 'units/estructuras/edd_types.pas',
  lista_simple in 'units/estructuras/lista_simple.pas',
  lista_doble in 'units/estructuras/lista_doble.pas',
  lista_circular in 'units/estructuras/lista_circular.pas',
  pila in 'units/estructuras/pila.pas',
  cola in 'units/estructuras/cola.pas',
  matriz_dispersa in 'units/estructuras/matriz_dispersa.pas';

procedure TestTodo;
var
  usuarios: TListaUsuarios;
  bandeja: TListaDobleCorreos;
  papelera: TPilaPapelera;
  programados: TColaProgramados;
  contactos: TListaCircularContactos;
  relaciones: TMatrizDispersa;
  u: TUsuario;
  c: TCorreo;
  eliminado: TCorreo;
  encontrado: TCorreo;
  nEnviados: LongInt;
begin
  // Usuarios
  LS_Init(usuarios);
  u.Id := 1; u.Nombre := 'Alumno'; u.Usuario := 'alumno'; u.Email := 'alumno@edd.com'; u.Telefono := '12345678'; LS_Append(usuarios, u);
  u.Id := 2; u.Nombre := 'Luis Garcia'; u.Usuario := 'auxluis'; u.Email := 'aux-luis@edd.com'; u.Telefono := '12345678'; LS_Append(usuarios, u);
  u.Id := 3; u.Nombre := 'Marcos Itzep'; u.Usuario := 'auxmarcos'; u.Email := 'aux-marcosg@edd.com'; u.Telefono := '87654321'; LS_Append(usuarios, u);
  LS_ToDot(usuarios, 'out_usuarios.dot');

  // Bandeja (lista doble)
  LD_Init(bandeja);
  c.Id := 101; c.Remitente := 'aux-luis@edd.com'; c.Destinatario := 'alumno@edd.com'; c.Estado := ecNoLeido; c.Programado := False; c.Asunto := 'Bienvenida'; c.Fecha := Now; c.Mensaje := 'Hola!'; LD_PushBack(bandeja, c);
  c.Id := 102; c.Remitente := 'aux-marcosg@edd.com'; c.Destinatario := 'alumno@edd.com'; c.Estado := ecNoLeido; c.Programado := False; c.Asunto := 'Aviso'; c.Fecha := Now; c.Mensaje := 'Revisa...'; LD_PushBack(bandeja, c);
  c.Id := 103; c.Remitente := 'root@edd.com'; c.Destinatario := 'alumno@edd.com'; c.Estado := ecNoLeido; c.Programado := False; c.Asunto := 'Recordatorio'; c.Fecha := Now; c.Mensaje := 'Entrega'; LD_PushBack(bandeja, c);
  Writeln('No leídos: ', bandeja.CountNoLeidos);
  LD_SortByAsuntoAZ(bandeja);
  LD_ToDot(bandeja, 'out_bandeja.dot');
  LD_MarkAsRead(bandeja, 101);
  Writeln('No leídos tras leer uno: ', bandeja.CountNoLeidos);

  // Papelera (pila)
  PP_Init(papelera);
  if LD_DeleteById(bandeja, 102, eliminado) then PP_Push(papelera, eliminado);
  if PP_BuscarPorAsunto(papelera, 'Aviso', encontrado) then Writeln('Encontrado en papelera: ', encontrado.Asunto);
  PP_ToDot(papelera, 'out_papelera.dot');

  // Programados (cola) -> luego pasan a bandeja al procesar
  Q_Init(programados);
  c.Id := 201; c.Remitente := 'alumno@edd.com'; c.Destinatario := 'aux-luis@edd.com'; c.Programado := True; c.Estado := ecNoLeido; c.Asunto := 'Pregunta'; c.Fecha := IncMinute(Now, -1); c.Mensaje := 'Hola'; Q_Enqueue(programados, c);
  c.Id := 202; c.Remitente := 'alumno@edd.com'; c.Destinatario := 'aux-marcosg@edd.com'; c.Programado := True; c.Estado := ecNoLeido; c.Asunto := 'Otra'; c.Fecha := IncMinute(Now, 10); c.Mensaje := 'Luego'; Q_Enqueue(programados, c);
  Q_ToDot(programados, 'out_programados.dot');
  nEnviados := Q_ProcesarHasta(programados, Now, bandeja);
  Writeln('Enviados a bandeja: ', nEnviados);
  LD_ToDot(bandeja, 'out_bandeja2.dot');

  // Contactos (lista circular)
  LC_Init(contactos);
      var tc: TContacto;
  var tc: TContacto; begin tc.Email := 'aux-luis@edd.com'; LC_Add(contactos, tc); end;
      tc.Email := 'aux-marcosg@edd.com'; LC_Add(contactos, tc);
      tc.Email := 'root@edd.com'; LC_Add(contactos, tc);
  LC_ToDot(contactos, 'out_contactos.dot');

  // Matriz Dispersa (relaciones)
  MD_Init(relaciones);
  MD_AddEdge(relaciones, 'alumno@edd.com', 'aux-luis@edd.com', 1);
  MD_AddEdge(relaciones, 'alumno@edd.com', 'aux-marcosg@edd.com', 1);
  MD_AddEdge(relaciones, 'root@edd.com', 'alumno@edd.com', 3);
  MD_ToDot(relaciones, 'out_relaciones.dot');

  // Limpieza
  LS_Clear(usuarios);
  LD_Clear(bandeja);
  PP_Clear(papelera);
  Q_Clear(programados);
  LC_Clear(contactos);
  MD_Clear(relaciones);
end;

begin
  TestTodo;
  Writeln('Pruebas de estructuras completadas.');
end.
